name: Deploy to EC2

# Bu iş akışı, 'main' branch'ine her push yapıldığında tetiklenecek
on:
  push:
    branches:
      - main  # Eğer branch adınız 'master' ise burayı 'master' olarak değiştirin

jobs:
  deploy:
    # Bu job, GitHub tarafından sağlanan sanal bir Ubuntu makinesinde çalışacak
    runs-on: ubuntu-latest

    steps:
    # 1. Adım: Kodumuzu (repository) bu sanal makineye kopyalar
    - name: Checkout code
      uses: actions/checkout@v3

    # 2. Adım: Sunucuya SSH ile bağlanır ve deploy komutlarını çalıştırır
    - name: Deploy to EC2
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}             # GitHub Secrets'tan HOST'u okur
        username: ${{ secrets.USERNAME }}     # GitHub Secrets'tan USERNAME'i okur
        key: ${{ secrets.PRIVATE_KEY }}       # GitHub Secrets'tan PRIVATE_KEY'i okur
        port: 22                              # SSH portu
        
        # Sunucuda çalıştırılacak komutlar:
        script: |
          cd ${{ secrets.PROJECT_PATH }}
          git pull
          docker build -t benim-uygulamam .
          
        # 'my-web-app' adında bir container varsa durdur ve kaldır
        # '|| true' ekliyoruz ki container bulunamazsa bile hata verip scripti durdurmasın
          docker stop my-web-app || true
          docker rm my-web-app || true
          
          # Yeni imajdan yeni container'ı sabit isimle başlat
          docker run -d -p 80:80 --name my-web-app benim-uygulamam